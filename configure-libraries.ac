UNSAFELIBS=

AC_ARG_WITH(minuit,
	AS_HELP_STRING([--with-minuit],[enable Minuit support (default-use if found)]),,with_minuit=check)

MINUITVER="2"
if test x$with_minuit != xno; then
	FOUNDMINUIT=yes
	AC_CHECK_HEADERS(Minuit2/FCNBase.h,AC_DEFINE(MINUITVER,2),FOUNDMINUIT=no)
	if test x$FOUNDMINUIT = xno; then
		AC_CHECK_HEADERS(Minuit/FCNBase.h,AC_DEFINE(MINUITVER,1)
			FOUNDMINUIT=yes,AC_MSG_WARN([Minuit header files (Minuit/FCNBase.h) not found
Is CPPFLAGS is defined to include relevant directory?]))
	fi
	if test x$FOUNDMINUIT = xyes; then
		AC_SEARCH_LIBS([main], [Minuit2, lcg_Minuit, Minuit],,FOUNDMINUIT=no
				AC_MSG_WARN([Minuit library (libMinuit2, liblcg_Minuit or libMinuit) not found
Is LDFLAGS is defined to include relevant directory?]))
		if test x$FOUNDMINUIT = xyes; then
			AC_DEFINE(HAVE_LIBMINUIT)
# Current versions don't seem to need g2c
#			NEEDG2C="yes"
		else
			if test x$with_minuit = xyes; then
				AC_MSG_FAILURE([--with-minuit was given, but Minuit tests failed])
			fi
		fi
	fi
fi

AC_ARG_WITH(mkl,
	AS_HELP_STRING([--with-mkl],[use the Intel MKL library (default-use no)]),,with_mkl=no)
if test x$with_mkl != xno; then
	FOUNDMKL=yes
	AC_CHECK_HEADERS(mkl_cblas.h,,FOUNDMKL=no
		AC_MSG_WARN([mkl_cblas.h header file needed by MKL not found
Is CCPFLAGS defined to include relevant directory?]))
	if test x$FOUNDMKL = xyes; then
		LIBS="$LIBS -lmkl_intel_lp64 -lmkl_sequential -lmkl_core"
		CXXFLAGS="$CXXFLAGS -DLCM_USE_EXTERNAL"
	else
		if test x$with_mkl = xyes; then
			AC_MSG_FAILURE([--with-mkl was given, but MKL tests failed])
		fi
	fi
fi

AC_ARG_WITH(openblas,
	AS_HELP_STRING([--with-openblas],[use the OpenBLAS library (default-use if found)]),,with_openblas=check)
if test x$with_openblas != xno; then
	FOUNDOPENBLAS=yes
	AC_CHECK_HEADERS([cblas64.h cblas.h OpenBLAS/cblas.h],break,FOUNDOPENBLAS=no
		AC_MSG_WARN([cblas64.h/cblas.h header file needed by OpenBLAS not found
Is CCPFLAGS defined to include relevant directory?]))
	AC_CHECK_LIB(openblas64,main,,FOUNDOPENBLAS=no
		AC_MSG_WARN([OpenBLAS library (libopenblas64.a) not found
Is LDFLAGS is defined to include relevant directory?]))
	if test x$FOUNDOPENBLAS = xyes; then
		CXXFLAGS="$CXXFLAGS -DLCM_USE_EXTERNAL"
		AC_DEFINE(HAVE_LIBOPENBLAS)
	else
		if test x$with_openblas = xyes; then
			AC_MSG_FAILURE([--with-openblas was given, but OpenBLAS tests failed])
		fi
	fi
fi


AC_ARG_WITH(atlas,
	AS_HELP_STRING([--with-atlas],[use the ATLAS BLAS library (default-use no)]),,with_atlas=no)
if test x$FOUNDMKL = xyes; then
	if test x$with_atlas = xyes; then
		AC_MSG_FAILURE([can't specify both --with-mkl and --with-atlas])
	fi
	with_atlas = no
fi
if test x$with_atlas != xno; then
	FOUNDATLAS=yes
	AC_CHECK_HEADERS(cblas.h,,FOUNDATLAS=no
		AC_MSG_WARN([cblas.h header files needed by ATLAS not found 
Is CPPFLAGS defined to include relevant directory?]))
	AC_CHECK_LIB(atlas,main,,FOUNDATLAS=no
		AC_MSG_WARN([ATLAS library (libatlas.a) not found
Is LDFLAGS is defined to include relevant directory?]))
	if test x$FOUNDATLAS = xyes; then	
		LIBS="-lcblas $LIBS"
		CXXFLAGS="$CXXFLAGS -DLCM_USE_EXTERNAL"
	else
		if test x$with_atlas = xyes; then
			AC_MSG_FAILURE([--with-atlas was given, but ATLAS tests failed])
		fi
	fi	
fi

#AC_ARG_WITH(acml,
#	AS_HELP_STRING([--with-acml],[use the ACML BLAS library (default=no)]),,with_acml=no)
#if test x$with_acml = xyes; then
#	AC_CHECK_HEADERS(acml.h,,AC_MSG_ERROR([ACML header files (acml.h) not found 
#Check CPPFLAGS is defined to include relevant directory]))
#	AC_CHECK_LIB(acml,main,,AC_MSG_ERROR([ACML library (libacml.a) not found
#Check LDFLAGS is defined to include relevant directory]))
#	NEEDG2C="yes"
#	CXXFLAGS="$CXXFLAGS -DLCM_USE_EXTERNAL"	
#fi

AC_ARG_WITH(mpi,
	AS_HELP_STRING([--with-MPI],[enable use of MPI (default=no)]),,with_mpi=no)
if test x$with_mpi = xyes; then
	AC_CHECK_HEADERS(mpi.h,,AC_MSG_ERROR([MPI header file (mpi.h) not found
Check CPPFLAGS (or CXX) is defined to include relevant directory]))
# Compile script is assumed to link in correct library
#	AC_CHECK_LIB(mpi,main,,AC_MSG_ERROR([MPI library (libmpi.a) not found
#Check LDFLAGS is defined to include relevant directory]))
	AC_DEFINE(HAVE_LIBMPI)
fi

AC_CHECK_LIB(rt,clock_gettime)
AC_CHECK_LIB(fast,memcpy,UNSAFELIBS=-lfast)
