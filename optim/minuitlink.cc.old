#include <cstring>
#include <cstdlib>
#include "List.h"
#include "optim.h"

const int UNIT=11;//must match with minuitlink_f

#define MAXLEN 256

extern "C" void minuitlink(int *npar,double * /*gradient*/,double *funcval,double *vals,int *iflag,const libcmatrix::BaseMinFunction* pfobj)
{
  libcmatrix::List<double> pars(*npar,vals);
  *funcval=(*pfobj)(pars,*iflag);
}

namespace libcmatrix {

  void minuitcall(const BaseMinFunction& fobj)
  {
    minuit_(minuitlink,&fobj);
  }

void minuitinit(const char *fname)
{
  if (fname) {
    char scratch[MAXLEN];
    if (strlen(fname)>MAXLEN-10) throw libcmatrix::Failed("minuitinit: filename overflow");
    sprintf(scratch,"FORT%i=%s",UNIT,fname);
    putenv(scratch);
  }
  f_init();
  if (fname) minuitinitio_();
}
  
  void minuitexit()
  {
    f_exit();
  }

}
